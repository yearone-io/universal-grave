/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../common';
import type { ERC725YInit, ERC725YInitInterface } from '../ERC725YInit';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ERC725Y_DataKeysValuesEmptyArray',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ERC725Y_DataKeysValuesLengthMismatch',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ERC725Y_MsgValueDisallowed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OwnableCannotSetZeroAddressAsOwner',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'dataKey',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'dataValue',
        type: 'bytes',
      },
    ],
    name: 'DataChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'dataKey',
        type: 'bytes32',
      },
    ],
    name: 'getData',
    outputs: [
      {
        internalType: 'bytes',
        name: 'dataValue',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'dataKeys',
        type: 'bytes32[]',
      },
    ],
    name: 'getDataBatch',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'dataValues',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'initialOwner',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'dataKey',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'dataValue',
        type: 'bytes',
      },
    ],
    name: 'setData',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'dataKeys',
        type: 'bytes32[]',
      },
      {
        internalType: 'bytes[]',
        name: 'dataValues',
        type: 'bytes[]',
      },
    ],
    name: 'setDataBatch',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001d2565b600060019054906101000a900460ff16156200007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000729062000175565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620000ec5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620000e39190620001b5565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200015d602783620000ee565b91506200016a82620000ff565b604082019050919050565b6000602082019050818103600083015262000190816200014e565b9050919050565b600060ff82169050919050565b620001af8162000197565b82525050565b6000602082019050620001cc6000830184620001a4565b92915050565b6117d780620001e26000396000f3fe6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b146101385780639790242114610163578063c4d66de81461017f578063dedff9c61461019b578063f2fde38b146101d857610086565b806301ffc9a71461008b57806354f6127f146100c8578063715018a6146101055780637f23690c1461011c575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610a9e565b610201565b6040516100bf9190610ae6565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610b37565b610262565b6040516100fc9190610bf4565b60405180910390f35b34801561011157600080fd5b5061011a610274565b005b61013660048036038101906101319190610d4b565b610288565b005b34801561014457600080fd5b5061014d6102d8565b60405161015a9190610de8565b60405180910390f35b61017d60048036038101906101789190610fac565b610302565b005b61019960048036038101906101949190611050565b610352565b005b3480156101a757600080fd5b506101c260048036038101906101bd919061107d565b610492565b6040516101cf91906111d2565b60405180910390f35b3480156101e457600080fd5b506101ff60048036038101906101fa9190611050565b610543565b005b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061025b575061025a826105c6565b5b9050919050565b606061026d82610630565b9050919050565b61027c6106d5565b6102866000610753565b565b6102906106d5565b600034146102ca576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102d48282610819565b5050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61030a6106d5565b60003414610344576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61034e8282610876565b5050565b60008060019054906101000a900460ff161590508080156103835750600160008054906101000a900460ff1660ff16105b806103b0575061039230610946565b1580156103af5750600160008054906101000a900460ff1660ff16145b5b6103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e690611277565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801561042c576001600060016101000a81548160ff0219169083151502179055505b61043582610969565b801561048e5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161048591906112e9565b60405180910390a15b5050565b6060815167ffffffffffffffff8111156104af576104ae610c20565b5b6040519080825280602002602001820160405280156104e257816020015b60608152602001906001900390816104cd5790505b50905060005b825181101561053d5761051483828151811061050757610506611304565b5b6020026020010151610630565b82828151811061052757610526611304565b5b60200260200101819052508060010190506104e8565b50919050565b61054b6106d5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b1906113a5565b60405180910390fd5b6105c381610753565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6060609760008381526020019081526020016000208054610650906113f4565b80601f016020809104026020016040519081016040528092919081815260200182805461067c906113f4565b80156106c95780601f1061069e576101008083540402835291602001916106c9565b820191906000526020600020905b8154815290600101906020018083116106ac57829003601f168201915b50505050509050919050565b6106dd610a2a565b73ffffffffffffffffffffffffffffffffffffffff166106fb6102d8565b73ffffffffffffffffffffffffffffffffffffffff1614610751576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074890611471565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b80609760008481526020019081526020016000209081610839919061163d565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405161086a9190610bf4565b60405180910390a25050565b80518251146108b1576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251036108ec576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156109415761093683828151811061090e5761090d611304565b5b602002602001015183838151811061092957610928611304565b5b6020026020010151610819565b8060010190506108ef565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166109b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109af90611781565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a1e576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a2781610753565b50565b600033905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a7b81610a46565b8114610a8657600080fd5b50565b600081359050610a9881610a72565b92915050565b600060208284031215610ab457610ab3610a3c565b5b6000610ac284828501610a89565b91505092915050565b60008115159050919050565b610ae081610acb565b82525050565b6000602082019050610afb6000830184610ad7565b92915050565b6000819050919050565b610b1481610b01565b8114610b1f57600080fd5b50565b600081359050610b3181610b0b565b92915050565b600060208284031215610b4d57610b4c610a3c565b5b6000610b5b84828501610b22565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b9e578082015181840152602081019050610b83565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bc682610b64565b610bd08185610b6f565b9350610be0818560208601610b80565b610be981610baa565b840191505092915050565b60006020820190508181036000830152610c0e8184610bbb565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c5882610baa565b810181811067ffffffffffffffff82111715610c7757610c76610c20565b5b80604052505050565b6000610c8a610a32565b9050610c968282610c4f565b919050565b600067ffffffffffffffff821115610cb657610cb5610c20565b5b610cbf82610baa565b9050602081019050919050565b82818337600083830152505050565b6000610cee610ce984610c9b565b610c80565b905082815260208101848484011115610d0a57610d09610c1b565b5b610d15848285610ccc565b509392505050565b600082601f830112610d3257610d31610c16565b5b8135610d42848260208601610cdb565b91505092915050565b60008060408385031215610d6257610d61610a3c565b5b6000610d7085828601610b22565b925050602083013567ffffffffffffffff811115610d9157610d90610a41565b5b610d9d85828601610d1d565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dd282610da7565b9050919050565b610de281610dc7565b82525050565b6000602082019050610dfd6000830184610dd9565b92915050565b600067ffffffffffffffff821115610e1e57610e1d610c20565b5b602082029050602081019050919050565b600080fd5b6000610e47610e4284610e03565b610c80565b90508083825260208201905060208402830185811115610e6a57610e69610e2f565b5b835b81811015610e935780610e7f8882610b22565b845260208401935050602081019050610e6c565b5050509392505050565b600082601f830112610eb257610eb1610c16565b5b8135610ec2848260208601610e34565b91505092915050565b600067ffffffffffffffff821115610ee657610ee5610c20565b5b602082029050602081019050919050565b6000610f0a610f0584610ecb565b610c80565b90508083825260208201905060208402830185811115610f2d57610f2c610e2f565b5b835b81811015610f7457803567ffffffffffffffff811115610f5257610f51610c16565b5b808601610f5f8982610d1d565b85526020850194505050602081019050610f2f565b5050509392505050565b600082601f830112610f9357610f92610c16565b5b8135610fa3848260208601610ef7565b91505092915050565b60008060408385031215610fc357610fc2610a3c565b5b600083013567ffffffffffffffff811115610fe157610fe0610a41565b5b610fed85828601610e9d565b925050602083013567ffffffffffffffff81111561100e5761100d610a41565b5b61101a85828601610f7e565b9150509250929050565b61102d81610dc7565b811461103857600080fd5b50565b60008135905061104a81611024565b92915050565b60006020828403121561106657611065610a3c565b5b60006110748482850161103b565b91505092915050565b60006020828403121561109357611092610a3c565b5b600082013567ffffffffffffffff8111156110b1576110b0610a41565b5b6110bd84828501610e9d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061110e82610b64565b61111881856110f2565b9350611128818560208601610b80565b61113181610baa565b840191505092915050565b60006111488383611103565b905092915050565b6000602082019050919050565b6000611168826110c6565b61117281856110d1565b935083602082028501611184856110e2565b8060005b858110156111c057848403895281516111a1858261113c565b94506111ac83611150565b925060208a01995050600181019050611188565b50829750879550505050505092915050565b600060208201905081810360008301526111ec818461115d565b905092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611261602e836111f4565b915061126c82611205565b604082019050919050565b6000602082019050818103600083015261129081611254565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006112d36112ce6112c984611297565b6112ae565b6112a1565b9050919050565b6112e3816112b8565b82525050565b60006020820190506112fe60008301846112da565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061138f6026836111f4565b915061139a82611333565b604082019050919050565b600060208201905081810360008301526113be81611382565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061140c57607f821691505b60208210810361141f5761141e6113c5565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061145b6020836111f4565b915061146682611425565b602082019050919050565b6000602082019050818103600083015261148a8161144e565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026114f37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826114b6565b6114fd86836114b6565b95508019841693508086168417925050509392505050565b6000819050919050565b600061153a61153561153084611515565b6112ae565b611515565b9050919050565b6000819050919050565b6115548361151f565b61156861156082611541565b8484546114c3565b825550505050565b600090565b61157d611570565b61158881848461154b565b505050565b5b818110156115ac576115a1600082611575565b60018101905061158e565b5050565b601f8211156115f1576115c281611491565b6115cb846114a6565b810160208510156115da578190505b6115ee6115e6856114a6565b83018261158d565b50505b505050565b600082821c905092915050565b6000611614600019846008026115f6565b1980831691505092915050565b600061162d8383611603565b9150826002028217905092915050565b61164682610b64565b67ffffffffffffffff81111561165f5761165e610c20565b5b61166982546113f4565b6116748282856115b0565b600060209050601f8311600181146116a75760008415611695578287015190505b61169f8582611621565b865550611707565b601f1984166116b586611491565b60005b828110156116dd578489015182556001820191506020850194506020810190506116b8565b868310156116fa57848901516116f6601f891682611603565b8355505b6001600288020188555050505b505050505050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061176b602b836111f4565b91506117768261170f565b604082019050919050565b6000602082019050818103600083015261179a8161175e565b905091905056fea26469706673582212201fc79200c78914cb2e685511fdb54843db92a53a12e2ca3e6f256d85fa7e154464736f6c63430008110033';

type ERC725YInitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC725YInitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC725YInit__factory extends ContractFactory {
  constructor(...args: ERC725YInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC725YInit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC725YInit__factory {
    return super.connect(runner) as ERC725YInit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC725YInitInterface {
    return new Interface(_abi) as ERC725YInitInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC725YInit {
    return new Contract(address, _abi, runner) as unknown as ERC725YInit;
  }
}
